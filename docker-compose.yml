version: '3.4'

services:

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=market_user
      - POSTGRES_PASSWORD=pwd0123456789
      - POSTGRES_DB=sanic_postgres
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data

  market:
    build:
      context: project
      dockerfile: Dockerfile
    volumes:
      - ./project/:/opt/project/
#    image: vaultvulp/pipenv-ubuntu
#    volumes:
#      - ./:/opt/market/
#      - site-packages:/usr/local/lib/python3.8/site-packages
    restart: always
    depends_on:
      - postgres
    working_dir: /opt/
    environment:
      - SANIC_DB_HOST=postgres
      - SANIC_DB_DATABASE=sanic_postgres
      - SANIC_DB_USER=market_user
      - SANIC_DB_PASSWORD=pwd0123456789
    ports:
      - 8888:8888
    links:
      - postgres
    command: bash -c "python -m project"

  catalog:
    build:
      context: catalog
      dockerfile: Dockerfile
    volumes:
      - ./catalog/:/opt/catalog/
    restart: always
    depends_on:
      - postgres
    working_dir: /opt/
    environment:
      - SANIC_SERVER_PORT=8002
      - SANIC_DB_HOST=postgres
      - SANIC_DB_DATABASE=sanic_postgres__catalog
      - SANIC_DB_USER=catalog_user
      - SANIC_DB_PASSWORD=pwd__catalog_0123456789
    ports:
      - 8002:8002
    links:
      - postgres
    command: bash -c "python -m catalog"

  auth:
    build:
      context: auth
      dockerfile: Dockerfile
    volumes:
      - ./auth/:/opt/auth/
    restart: always
    depends_on:
      - postgres
    working_dir: /opt/
    environment:
      - SANIC_SERVER_PORT=8001
      - SANIC_DB_HOST=postgres
      - SANIC_DB_DATABASE=sanic_postgres__auth
      - SANIC_DB_USER=market_user
      - SANIC_DB_PASSWORD=pwd0123456789
      - SANIC_CHAT_ID=${CHAT_ID}
      - SANIC_EMAIL_SERVICE=http://email:5000/send_email
      - SANIC_PUSH_SERVICE=http://push:5000/send_push
    ports:
      - 8001:8001
    links:
      - postgres
    command: bash -c "python -m auth"

  email:
    build:
      context: mail
      dockerfile: Dockerfile
    volumes:
      - ./mail/:/opt/app/
    restart: always
    depends_on:
      - mailhog
    working_dir: /opt/
    ports:
      - 5000:5000
    command: bash -c "python -m app"

  push:
    build:
      context: push
      dockerfile: Dockerfile
    volumes:
      - ./push/:/opt/push/
    restart: always
    environment:
      - SANIC_BOT_TOKEN=${BOT_TOKEN}
      - SANIC_PROXY=${PROXY}
    working_dir: /opt/
    ports:
      - 5555:5555
    command: bash -c "python -m push"

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - 1025:1025 # SMTP server
      - 8025:8025 # Web UI

  websocket:
    build:
      context: websocket
      dockerfile: Dockerfile
    volumes:
      - ./websocket/:/opt/websocket/
    restart: always
    working_dir: /opt/
    ports:
      - 3000:3000
    command: bash -c "python -m websocket"

volumes:
  site-packages: